/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default Layer";

            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp TAB       &kp N1  &kp N2  &kp N3    &kp N4      &kp N5                                          &kp N6  &kp N7    &kp N8         &kp N9   &kp N0    &kp BACKSPACE
&kp LC(E)     &kp Q   &kp W   &kp E     &kp R       &kp T                                           &kp Z   &kp U     &kp I          &kp O    &kp SEMI  &kp MINUS
&kp LC(Q)     &kp A   &kp S   &kp D     &kp F       &kp G                                           &kp H   &kp J     &kp K          &kp L    &kp P     &kp SQT
&kp LEFT_WIN  &kp Y   &kp X   &kp C     &kp V       &kp B      &kp LC(C)               &kp LC(V)    &kp N   &kp M     &kp COMMA      &kp DOT  &kp FSLH  &kp DEL
                              &kp LALT  &kp ESCAPE  &kp LCTRL  &mt LEFT_SHIFT SPACE    &lt 2 ENTER  &mo 1   &kp BSPC  &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            display-name = "Lower Layer";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp LG(PERIOD)  &bt BT_SEL 0      &bt BT_SEL 1       &kp LS(N9)            &bt BT_SEL 3           &kp PLUS                           &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans        &trans         &trans    &trans
&kp F1          &kp F2            &kp AT             &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PLUS                           &kp F7           &kp PAGE_UP      &kp UP_ARROW  &kp PAGE_DOWN  &kp F11   &kp F12
&kp GRAVE       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp MINUS                          &kp CARET        &kp LEFT         &kp DOWN      &kp RIGHT      &kp RPAR  &kp TILDE
&trans          &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG     &trans                 &kp EQUAL  &kp LC(Z)    &kp LC(Y)  &kp PRINTSCREEN  &kp PRINTSCREEN  &kp PLUS      &kp LBRC       &kp RBRC  &kp PIPE
                                                     &trans                &trans                 &trans     &trans       &trans     &trans           &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Raise {
            bindings = <
&bt BT_CLR_ALL  &bt BT_NXT  &bt BT_PRV  &trans  &trans  &trans                    &trans      &trans        &trans           &trans            &trans  &trans
&trans          &trans      &trans      &trans  &trans  &trans                    &trans      &trans        &trans           &trans            &trans  &trans
&trans          &trans      &trans      &trans  &trans  &trans                    &trans      &trans        &trans           &trans            &trans  &trans
&trans          &trans      &trans      &trans  &trans  &trans  &trans    &trans  &kp K_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp K_PLAY_PAUSE  &trans  &trans
                                        &trans  &trans  &trans  &trans    &trans  &trans      &trans        &trans
            >;
        };
    };
};
